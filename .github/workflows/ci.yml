name: Build and Test Segmentation Guard

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install build dependencies
      run: sudo apt-get update && sudo apt-get install -y gcc make

    - name: Build the library
      run: make all

    - name: Build examples
      run: make examples

    - name: Run nulldereference example test
      run: |
        cd out
        output=$(./nulldereference)
        echo "--- nulldereference Output ---"
        echo "$output"
        echo "--- End nulldereference Output ---"
        # Check if the output starts with the expected prefix
        expected_prefix="Segmentation guard caught a SIGSEGV with the following instruction:"
        if [[ "$output" == "$expected_prefix"* ]]; then
          echo "✅ nulldereference test passed (Caught SIGSEGV as expected)."
        else
          echo "❌ nulldereference test failed: Output did not match expected prefix."
          echo "Expected prefix: '$expected_prefix'"
          exit 1
        fi
        cd ..

    - name: Run nullfunction example test (expected failure)
      run: |
        cd out
        # This command is expected to fail with a non-zero exit code (SIGSEGV)
        set +e # Disable exit on error temporarily
        ./nullfunction
        exit_code=$?
        set -e # Re-enable exit on error
        echo "--- nullfunction Exit Code ---"
        echo "$exit_code"
        echo "--- End nullfunction Exit Code ---"
        # Check if the exit code is non-zero (indicating a crash, as expected)
        # Common SIGSEGV exit codes are 139 (128 + 11)
        if [[ $exit_code -ne 0 ]]; then
          echo "✅ nullfunction test passed (Crashed as expected)."
        else
          echo "❌ nullfunction test failed: Program did not crash as expected."
          exit 1
        fi
        cd ..

    - name: Upload distribution artifact
      uses: actions/upload-artifact@v4
      with:
        name: segmentation-guard-dist
        path: |
          out/include/
          out/lib/
